name: Build and Deploy to Amazon EKS

on:
  pull_request:
    branches: [develop]
  push:
    branches: [main]

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: public.ecr.aws/n0p9h9c2/dmsec
  EKS_CLUSTER: tech-challenge

permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        id: build-maven
        run: mvn -B package --file pom.xml

      - name: Get Project Version from pom.xml
        uses: entimaniac/read-pom-version-action@1.0.0
        id: getVersion

      - name: Print the version
        run: echo "v${{ steps.getVersion.outputs.version }}"

      - name: Set Git user identity
        run: |
          git config --global user.email "douglasmsi@gmail.com"
          git config --global user.name "Douglas Marra"


  generate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Required due to the way Git works, without it this action won't be able to find any or the correct tags
      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"
        with:
          fallback: 1.0.0 # Optional fallback tag to use when no tag can be found
      - name: 'Get next minor version'
        id: semvers
        uses: "WyriHaximus/github-action-next-semvers@v1"
        with:
          version: ${{ steps.previoustag.outputs.tag }}
      - name: 'Create new milestone'
        id: createmilestone
        uses: "WyriHaximus/github-action-create-milestone@v1"
        with:
          title: ${{ steps.semvers.outputs.patch }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"


  deploy:
    name: Deploy
    needs: generate
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Authenticate with AWS ECR Public
        run: |
          aws ecr-public get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPOSITORY }}



      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ needs.generate.outputs.semvers.patch }}
        run: |
          docker build -t $IMAGE_TAG .
          docker tag $IMAGE_TAG ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker push ${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Create kubeconfig for Amazon EKS
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER }} --region ${{ env.AWS_REGION }}

      - name: Deploy to Amazon EKS
        run: kubectl apply -f kubernetes/deployment.yaml
