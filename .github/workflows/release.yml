name: Release

on:
  push:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: tech-challenge
  EKS_CLUSTER: tech-challenge-eks
  RELEASE_REVISION: "pr-${{ github.event.pull_request.number }}-${{ github.event.pull_request.head.sha }}"
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: tech-challenge-namespace


permissions:
  contents: write
  pull-requests: write
  repository-projects: write

jobs:

  release:
    name: Release
    #needs: build
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Docker cache layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-single-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-single-buildx       

      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Run Namespace
        uses: nikosch86/github-action-eks-kubectl@main
        with:
          command: "apply -f kubernetes/1-tech-challenge-namespace.yaml"
        env:
          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}


      - name: Run Config map
        uses: nikosch86/github-action-eks-kubectl@main
        with:
          command: "apply -f kubernetes/2-tech-challenge-postgres-config-map.yaml"
        env:
          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}

      - name: Run Secret
        uses: nikosch86/github-action-eks-kubectl@main
        with:
          command: "apply -f kubernetes/3-tech-challenge-secret.yaml"
        env:
          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}

      - name: Run Service Metrics
        uses: nikosch86/github-action-eks-kubectl@main
        with:
          command: "apply -f kubernetes/4-tech-challenge-metrics.yaml"
        env:
          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}

      - name: Run Deployment
        uses: nikosch86/github-action-eks-kubectl@main
        with:
          command: "apply -f kubernetes/5-tech-challenge-deployment.yaml"
        env:
          EKS_CLUSTER: ${{ env.EKS_CLUSTER }}
